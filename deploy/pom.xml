<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<parent>
	
		<groupId>app</groupId>
		<artifactId>juinfo</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>../pom.xml</relativePath>
	
	</parent>

	<artifactId>juinfo.deploy</artifactId>
	<!-- FIXME a customized type ? -->
	<packaging>jar</packaging>
	<groupId>app</groupId>		
	<name>deploy</name>
	<description>Auto converted POM for deploy</description>
		
	<dependencies>
		<dependency>
			<groupId>app</groupId>
			<artifactId>juinfo.bundle.war</artifactId>
			<scope>runtime</scope>
			<version>${pom.version}</version>					
			<type>ali-war</type>
		</dependency>
		
	</dependencies>
	
	<properties>
		<appName>juinfo</appName>
    </properties>
	
	<build>
		<!-- workaround for the empty jar error -->
		<resources>
			<resource>
				<directory>juinfo</directory>
			</resource>
		</resources>
		<plugins>
			<!-- Plugin to support ali-war type artifacts -->
			<plugin>
				<groupId>ali.plugins</groupId>
				<artifactId>maven-car-plugin</artifactId>
				<extensions>true</extensions>
				<version>0.1</version>
			</plugin>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>prepare-deploy-package</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<!-- Configured Artifacts -->
								<mkdir dir="${binconf_directory}" />
								<copy todir="${binconf_directory}">
									<fileset dir="${project.basedir}/framework">
										<exclude name="conf/META-INF/**"/>
									</fileset>
								</copy>
								<copy todir="${binconf_directory}" encoding="${file_encoding}" outputencoding="${file_encoding}">
									<fileset dir="${project.basedir}/framework">
										<include name="conf/META-INF/**"/>
									</fileset>
									<filterchain>
										<replacetokens>
											<token key="appName" value="${appName}"/>
										</replacetokens>
									</filterchain>
								</copy>
								<copy todir="${binconf_directory}" overwrite="true">
									<fileset dir="${project.basedir}">
										<include name="htdocs/**"/>
										<include name="conf/**"/>
										<include name="bin/**"/>
									</fileset>
								</copy>
								<chmod dir="${binconf_directory}/bin" perm="755" includes="**"/>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- Copy war artifact -->
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.1</version>
				<executions>
					<execution>
						<id>copy-war</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>							
							<artifactItems>
								<artifactItem>
									<groupId>app</groupId>
									<artifactId>juinfo.bundle.war</artifactId>
									<version>${pom.version}</version>
									<type>ali-war</type> 
								</artifactItem>
							</artifactItems>							
							<outputDirectory>${release_directory}</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>true</overWriteSnapshots>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<!-- Release profile will just copy war and package resource files to target/release, W/O auto-conf. -->
		<!-- AppOPs will run auto-conf before deploying to production server -->
		<!-- By default the "dev" profile will be activated -->
		<!-- Use "mvn install -Denv=release" to activate release profile --> 
		<profile>
			<id>release</id>
			<activation>
				<property>
					<name>env</name>
					<value>release</value>
				</property>
			</activation>
			<properties>
				<release_directory>${project.parent.build.directory}</release_directory>
				<binconf_directory>${project.build.directory}/temp</binconf_directory>
			</properties>
			<build>
				<plugins>
					<!-- Tar script/conf/template resources -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>assembly-deploy-package</id>
								<phase>package</phase>
								<goals>
									<goal>run</goal>
								</goals>								
								<configuration>
									<tasks>
										<jar destfile="${release_directory}/web-deploy.jar">
											<zipfileset dir="${binconf_directory}/conf/META-INF" prefix="META-INF"/>
											<zipfileset dir="${binconf_directory}">
												<include name="htdocs/**"/>
												<include name="conf/**"/>
												<exclude name="conf/META-INF/**"/>
											</zipfileset>
											<zipfileset dir="${binconf_directory}" filemode="755">
												<include name="bin/**"/>
											</zipfileset>
											<zipfileset dir="${project.basedir}">
												<include name="templates/**"/>
											</zipfileset>
										</jar>
									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!-- Dev profile will configure all files and copy them to target/dev, for testing purpose -->
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<property>
					<name>env</name>
					<value>!release</value>
				</property>
			</activation>
			<properties>
				<release_directory>${project.build.directory}</release_directory>
				<binconf_directory>${project.build.directory}/web-deploy</binconf_directory>
			</properties>
			<build>
				<plugins>			
					<!-- do auto config for integration test -->
					<plugin>
						<groupId>ali.plugins</groupId>
						<artifactId>maven-autoconf-plugin</artifactId>
						<version>0.6</version>
						<executions>
							<execution>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>config</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<destFiles>
								<destFile>${release_directory}/web-deploy</destFile>								
								<destFile>${release_directory}/juinfo.bundle.war-${pom.version}.war</destFile>							
							</destFiles>
							<includeDescriptorPatterns>
								<!-- china-site flavor -->
								<includeDescriptorPattern>conf/META-INF/autoconf/auto-config.xml</includeDescriptorPattern>
							</includeDescriptorPatterns>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
