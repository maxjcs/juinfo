<?xml version="1.0" encoding="GB18030" ?>
<beans:beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:services="http://www.alibaba.com/schema/services"
	xmlns:session-encoders="http://www.alibaba.com/schema/services/request-contexts/session/encoders"
	xmlns:session-stores="http://www.alibaba.com/schema/services/request-contexts/session/stores"
	xmlns:value-encoders="http://www.alibaba.com/schema/services/request-contexts/session/value-encoders"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:session-model-encoders="http://www.alibaba.com/schema/services/request-contexts/session/model-encoders"
	xmlns:request-contexts="http://www.alibaba.com/schema/services/request-contexts"
	xmlns:session-encrypters="http://www.alibaba.com/schema/services/request-contexts/session/encrypters"
	xmlns:ml-adapters="http://www.alibaba.com/schema/services/module-loader/adapters"
	xmlns:ml-factories="http://www.alibaba.com/schema/services/module-loader/factories"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://localhost:8080/schema/www.springframework.org/schema/beans/spring-beans.xsd
	     http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd	     
	     http://www.alibaba.com/schema/services http://localhost:8080/schema/services.xsd
        http://www.alibaba.com/schema/services/request-contexts/session/encoders http://localhost:8080/schema/services-request-contexts-session-encoders.xsd
        http://www.alibaba.com/schema/services/request-contexts/session/stores http://localhost:8080/schema/services-request-contexts-session-stores.xsd
        http://www.alibaba.com/schema/services/request-contexts/session/value-encoders http://localhost:8080/schema/services-request-contexts-session-value-encoders.xsd             
        http://www.alibaba.com/schema/services/request-contexts/session/model-encoders http://localhost:8080/services-request-contexts-session-model-encoders.xsd
        http://www.alibaba.com/schema/services/request-contexts http://localhost:8080/services-request-contexts.xsd
        http://www.alibaba.com/schema/services/request-contexts/session/encrypters http://localhost:8080/services-request-contexts-session-encrypters.xsd
        http://www.alibaba.com/schema/services/module-loader/factories http://localhost:8080/services-module-loader-factories.xsd
        http://www.alibaba.com/schema/services http://www.alibaba.com/schema/services/module-loader/adapters"
	default-autowire="byName">

	<services:property-placeholder>
		<services:property key="component">common</services:property>
	</services:property-placeholder>

	<beans:import resource="common/webx-component-and-root.xml" />

	<beans:import resource="common/pipeline-exception.xml" />
	
	<import resource="common/resources.xml" />

	<import resource="common/uris.xml" />

	<beans:import resource="common/rewrite.xml" />

	<beans:import resource="classpath*:framework/bean/*.xml" />
	
<!-- 	<beans:import resource="common/dragoon.xml" />   -->
	
	<beans:bean id="aesEncrypter"
		class="com.alibaba.citrus.service.requestcontext.session.encrypter.impl.AesEncrypter">
		<property name="key" value="(23#5@7%90*2x5)!" />
	</beans:bean>

	<services:webx-configuration>
		<services:productionMode>true</services:productionMode>
		<services:components defaultComponent="common" />
	</services:webx-configuration>

	<services:request-contexts
		xmlns="http://www.alibaba.com/schema/services/request-contexts">
		<buffered />
		<lazy-commit />
		<request-context ref="urlRewrite"/>
		<parser converterQuiet="false">
			<request-contexts:filters
				xmlns="http://www.alibaba.com/schema/services/request-contexts/parser/filters">
				<uploaded-file-whitelist extensions="jpg,gif,bmp,png,xls,xlsx,txt" />
			</request-contexts:filters>
		</parser>
		<set-locale defaultLocale="zh_CN" defaultCharset="GBK" />
<!-- 		<session>
            <id>
                <cookie domain="${dataopen_cookiedomain}" name="DATAOPENSESSIONID" />
            </id>
            <stores>
                <session-stores:single-valued-cookie-store
                    id="CSRF_CookieStore">
                    <session-stores:cookie name="_csrf_token" />
                    <session-stores:encoders>
                        <value-encoders:simple-value-encoder
                            charset="GBK" />
                    </session-stores:encoders>
                </session-stores:single-valued-cookie-store>
                <session-stores:cookie-store id="temporaryCookie"
                    maxCount="10">
                    <session-stores:cookie name="_tmp_ck_"
                        survivesInInvalidating="false" />
                    <session-stores:encoders>
                        <session-encoders:serialization-encoder />
                    </session-stores:encoders>
                </session-stores:cookie-store>
            </stores>
		    <store-mappings>
                <match name="_csrf_token" store="CSRF_CookieStore" />
                <match name="*" store="temporaryCookie" />
            </store-mappings>
            <session-model-encoders>
                <session-model-encoders:default-session-model-encoder />
            </session-model-encoders>
        </session>
 -->		
	</services:request-contexts>

	<services:module-loader>
		<ml-factories:class-modules>
			<ml-factories:search-packages type="$1"
				packages="com.hlx.luckbuy.common.*"></ml-factories:search-packages>
		</ml-factories:class-modules>
	</services:module-loader>
</beans:beans>